/* Generated by GvGen v.1.0 (https://www.github.com/stricaud/gvgen) */

digraph G {
compound=true;nodesep=1;ranksep=0.5;splines=ortho;layout=neato;overlap=scalexy;
   node1 [shape="ellipse",label="Inizio",pos="0,0!"];
   node2 [shape="ellipse",label="Fine",pos="0,-17!"];
   node3 [shape="parallelogram",label="Insert A",pos="0,-1!"];
   node4 [shape="parallelogram",label="Insert B",pos="0,-2!"];
   node5 [shape="diamond",label="B != 0",pos="0,-3!"];
   node6 [shape="box",label="tmp = A % B",pos="2,-3!"];
   node7 [shape="diamond",label="hi",pos="2,-4!"];
   node8 [shape="box",label="please",pos="4,-4!"];
   node9 [shape="box",label="help",pos="4,-5!"];
   node10 [shape="diamond",label="a < b",pos="4,-6!"];
   node11 [shape="box",label="a++",pos="8,-6!"];
   node12 [shape="box",label="b--",pos="8,-7!"];
   node13 [shape="diamond",label="ad",pos="4,-7!"];
   node14 [shape="box",label="asfd",pos="6,-7!"];
   node15 [shape="diamond",label="hi",pos="4,-8!"];
   node16 [shape="box",label="please",pos="6,-8!"];
   node17 [shape="box",label="help",pos="6,-9!"];
   node18 [shape="diamond",label="a < b",pos="6,-10!"];
   node19 [shape="box",label="a++",pos="8,-10!"];
   node20 [shape="box",label="b--",pos="8,-11!"];
   node21 [shape="box",label="asfd",pos="6,-11!"];
   node22 [shape="point",label="",pos="6,-12!"];
   node23 [shape="point",label="",pos="4,-13!"];
   node24 [shape="box",label="me",pos="4,-14!"];
   node25 [shape="box",label="B = tmp",pos="2,-15!"];
   node26 [shape="parallelogram",label="Return A",pos="0,-16!"];
node1->node3;
node3->node4;
node4->node5;
node5->node6 [taillabel="True"];
node5->node26 [taillabel="False"];
node6->node7;
node7->node8 [taillabel="True"];
node7->node25 [taillabel="False"];
node8->node9;
node9->node10;
node10->node11 [taillabel="True"];
node10->node13 [taillabel="False"];
node11->node12;
node12->node23 [arrowhead="none"];
node13->node14 [taillabel="True"];
node13->node15 [taillabel="False"];
node14->node13;
node15->node16 [taillabel="True"];
node15->node23 [arrowhead="none",taillabel="False"];
node16->node17;
node17->node18;
node18->node19 [taillabel="True"];
node18->node21 [taillabel="False"];
node19->node20;
node20->node22 [arrowhead="none"];
node21->node22 [arrowhead="none"];
node22->node15;
node23->node24;
node24->node7;
node25->node5;
node26->node2;
}
